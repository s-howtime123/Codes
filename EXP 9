#include <iostream>
#include <stack>
#include <cctype>
#include <string>

// Function to print original string followed by reversed string using stack
void printOriginalAndReversed(const std::string& inputString) {
    std::stack<char> charStack;

    // Push characters onto the stack
    for (char ch : inputString) {
        if (isalnum(ch)) {  // Ignore non-alphanumeric characters
            charStack.push(tolower(ch));  // Ignore case
        }
    }

    // Print original string
    std::cout << "Original String: " << inputString << std::endl;

    // Print reversed string
    std::cout << "Reversed String: ";
    while (!charStack.empty()) {
        std::cout << charStack.top();
        charStack.pop();
    }
    std::cout << std::endl;
}

// Function to check whether given string is a palindrome or not
bool isPalindrome(const std::string& inputString) {
    std::stack<char> charStack;

    // Push characters onto the stack
    for (char ch : inputString) {
        if (isalnum(ch)) {  // Ignore non-alphanumeric characters
            charStack.push(tolower(ch));  // Ignore case
        }
    }

    // Check if the string is a palindrome
    for (char ch : inputString) {
        if (isalnum(ch)) {
            if (charStack.top() != tolower(ch)) {
                return false;
            }
            charStack.pop();
        }
    }

    return true;
}

int main() {
    std::string inputString;

    // Input from the user
    std::cout << "Enter a string: ";
    std::getline(std::cin, inputString);

    // Part (a): Print original and reversed string
    printOriginalAndReversed(inputString);

    // Part (b): Check if the string is a palindrome
    if (isPalindrome(inputString)) {
        std::cout << "The given string is a palindrome." << std::endl;
    } else {
        std::cout << "The given string is not a palindrome." << std::endl;
    }

    return 0;
}
